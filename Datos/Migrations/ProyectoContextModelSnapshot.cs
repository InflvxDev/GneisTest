// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(ProyectoContext))]
    partial class ProyectoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entidad.Checkin", b =>
                {
                    b.Property<string>("Idcheckin")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fechaentrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("Idcliente")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Idhabitacion")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Numeroinvitados")
                        .HasColumnType("int");

                    b.HasKey("Idcheckin");

                    b.HasIndex("Idcliente");

                    b.HasIndex("Idhabitacion");

                    b.ToTable("Checkins");
                });

            modelBuilder.Entity("Entidad.Checkout", b =>
                {
                    b.Property<string>("Idcheckout")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("DiasHospedaje")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fechaentrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fechasalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Idcliente")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Idhabitacion")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Numeroinvitados")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalHospedaje")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Idcheckout");

                    b.HasIndex("Idcliente");

                    b.HasIndex("Idhabitacion");

                    b.ToTable("Checkouts");
                });

            modelBuilder.Entity("Entidad.Cliente", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Hospedajes")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Telefono")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Cedula");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Entidad.Empleado", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Horario")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Telefono")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Cedula");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Entidad.Habitacion", b =>
                {
                    b.Property<string>("Idhabitacion")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Usos")
                        .HasColumnType("int");

                    b.HasKey("Idhabitacion");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("Entidad.Producto", b =>
                {
                    b.Property<string>("Idproducto")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<decimal>("Vrunitario")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Idproducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Entidad.Reserva", b =>
                {
                    b.Property<string>("Idreserva")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fechareserva")
                        .HasColumnType("datetime2");

                    b.Property<string>("Idcliente")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Idhabitacion")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Numeroinvitados")
                        .HasColumnType("int");

                    b.HasKey("Idreserva");

                    b.HasIndex("Idcliente");

                    b.HasIndex("Idhabitacion");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Entidad.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entidad.Usuario", b =>
                {
                    b.Property<string>("Iduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Typeuser")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Iduser");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Entidad.Checkin", b =>
                {
                    b.HasOne("Entidad.Cliente", null)
                        .WithMany()
                        .HasForeignKey("Idcliente");

                    b.HasOne("Entidad.Habitacion", null)
                        .WithMany()
                        .HasForeignKey("Idhabitacion");
                });

            modelBuilder.Entity("Entidad.Checkout", b =>
                {
                    b.HasOne("Entidad.Cliente", null)
                        .WithMany()
                        .HasForeignKey("Idcliente");

                    b.HasOne("Entidad.Habitacion", null)
                        .WithMany()
                        .HasForeignKey("Idhabitacion");
                });

            modelBuilder.Entity("Entidad.Reserva", b =>
                {
                    b.HasOne("Entidad.Cliente", null)
                        .WithMany()
                        .HasForeignKey("Idcliente");

                    b.HasOne("Entidad.Habitacion", null)
                        .WithMany()
                        .HasForeignKey("Idhabitacion");
                });
#pragma warning restore 612, 618
        }
    }
}
